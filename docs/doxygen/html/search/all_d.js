var searchData=
[
  ['pcwstr',['PCWSTR',['../namespace_win_toast_lib_1_1_dll_importer.html#af84f1354a0370a379a9a00db1331ad7e',1,'WinToastLib::DllImporter']]],
  ['pntstatus',['PNTSTATUS',['../wintoastlib_8cpp.html#a45cab0c6d91563a87c3943f82e7562c0',1,'wintoastlib.cpp']]],
  ['py_5finit_2ecpp',['py_init.cpp',['../py__init_8cpp.html',1,'']]],
  ['py_5finit_2eh',['py_init.h',['../py__init_8h.html',1,'']]],
  ['py_5fmodule_2ecpp',['py_module.cpp',['../py__module_8cpp.html',1,'']]],
  ['py_5fmodule_2eh',['py_module.h',['../py__module_8h.html',1,'']]],
  ['py_5ftemplate_2ecpp',['py_template.cpp',['../py__template_8cpp.html',1,'']]],
  ['py_5ftemplate_2eh',['py_template.h',['../py__template_8h.html',1,'']]],
  ['py_5futils_2ecpp',['py_utils.cpp',['../py__utils_8cpp.html',1,'']]],
  ['py_5futils_2eh',['py_utils.h',['../py__utils_8h.html',1,'']]],
  ['pydoc_5fstrvar',['PyDoc_STRVAR',['../py__init_8h.html#a76bb5bbe658ca08167e98cd1a6b06d44',1,'PyDoc_STRVAR(zroya_init__doc__, &quot;init(app_name, company_name, product_name, sub_product, version)\ &quot;--\\&quot; &quot;Initialize Zroya module. You should call this function before any other manipulation with this module. \&quot; &quot;If you do not call this function explicitely, randomly generated strings will be used as default parameters. \&quot; &quot;:param str app_name:Application name. \&quot; &quot;:param str company_name:Part of unique ID created for this application. \&quot; &quot;:param str product_name:Part of unique ID created for this application. \&quot; &quot;:param str sub_product:Part of unique ID created for this application. \&quot; &quot;:param str version:Part of unique ID created for this application. \&quot; &quot;:return:True if initialization is completed, False otherwise.&quot;):&#160;py_init.h'],['../py__init_8h.html#a72490bb96f397cc73d712d2ff40782e6',1,'PyDoc_STRVAR(zroya_show__doc__, &quot;show(template, on_click=None, on_action=None, on_dismiss=None, on_fail=None)\ &quot;--\\&quot; &quot;Show selected notification template. If any of on_ *parameter is set, corresponding event is registered. \&quot; &quot;:param zroya.Template template:Template instance. \&quot; &quot;:param callable on_click:Callback for OnClick event. Occurs when user activates a toast notification through a click or touch. \&quot; &quot;:param callable on_action:Callback for OnAction event. Occurs when user click toast notification action button. \&quot; &quot;:param callable on_dismiss:Callback for OnDismiss event. Occurs when a toast notification leaves the screen, either by expiring or being explicitly dismissed by the user. \&quot; &quot;:param callable on_fail:Callback for OnFail event. Occurs when an error is caused when Windows attempts to raise a toast notification. \&quot; &quot;:return:Notification ID if notification was shown. False otherwise.&quot;):&#160;py_init.h'],['../py__init_8h.html#af95e04a177ee2c3c2b3922b18648ca2a',1,'PyDoc_STRVAR(zroya_hide__doc__, &quot;hide(nid)\ &quot;--\\&quot; &quot;Hide notification by ID. \&quot; &quot;:param integer nid:Notification ID obtained from zroya.show function. \&quot; &quot;:return:True if notification was hidden, false otherwise.&quot;):&#160;py_init.h'],['../py__module_8h.html#a279e5fbfb2515594f17c98723b8b6ca0',1,'PyDoc_STRVAR(zroya__doc__, &quot;zroya\ &quot;--\\&quot; &quot;Library for creating native Windows 8, Window 9 and Windows 10 notifications. \&quot;):&#160;py_module.h'],['../py__template_8h.html#a8fc541d265d31ea9a78dea2ad1a5bb2e',1,'PyDoc_STRVAR(zroya_template_firstLine__doc__, &quot;firstLine(text=None)\ &quot;--\\&quot; &quot;Set or return first line of notification text. \&quot; &quot;:param str text:Text to be set as the first line. \&quot; &quot;:return:With _text_ parameter set, returns True/False. Without _text_, current first line is returned.&quot;):&#160;py_template.h'],['../py__template_8h.html#a5aee25d15eee2d746b1420398d1d26c5',1,'PyDoc_STRVAR(zroya_template_secondLine__doc__, &quot;secondLine(text=None)\ &quot;--\\&quot; &quot;Set or return second line of notification text. \&quot; &quot;:param str text:Text to be set as the second line. \&quot; &quot;:throw:ValueError if second line is not supported by selected notification type. \&quot; &quot;:return:With _text_ parameter set, returns True/False. Without _text_, current second line is returned.&quot;):&#160;py_template.h'],['../py__template_8h.html#af2b3c3177a741ff999eed8d1e018eb30',1,'PyDoc_STRVAR(zroya_template_thirdLine__doc__, &quot;thirdLine(text=None)\ &quot;--\\&quot; &quot;Set or return third line of notification text. \&quot; &quot;:param str text:Text to be set as the third line. \&quot; &quot;:throw:ValueError if third line is not supported by selected notification type. \&quot; &quot;:return:With _text_ parameter set, returns True/False. Without _text_, current third line is returned.&quot;):&#160;py_template.h'],['../py__template_8h.html#a5e695e2a46bc6858108fc986754dfb3f',1,'PyDoc_STRVAR(zroya_template_image__doc__, &quot;image(path=None)\ &quot;--\\&quot; &quot;Set or return notification image path. \&quot; &quot;:param str path:Path to image. \&quot; &quot;:return:With _path_ parameter set, it returns True/False. Without _text_, current image path is returned.&quot;):&#160;py_template.h'],['../py__template_8h.html#ac577aba3e77ad3d94407bd4877aab2bb',1,'PyDoc_STRVAR(zroya_template_audio__doc__, &quot;audio(audio=None, mode=None)\ &quot;--\\&quot; &quot;Set audio to be played and playback type or return current audio. \&quot; &quot;:param int audio:One of zroya.Template.AUDIO_ *property. \&quot; &quot;:param int mode:One of zroya.Template.AUDIO_TYPE_ *property. \&quot; &quot;:return:With _audio_ parameter provided, it sets new audio. In addition, if _type_ parameter is set, playback type is changed. Otherwise default playback type is used. True/False is returned.\ Without _audio_ parameter set, current audio is returned.&quot;):&#160;py_template.h'],['../py__template_8h.html#ad047088fef427c7eef201e695f684de8',1,'PyDoc_STRVAR(zroya_template_expire__doc__, &quot;expire(ms=0)\ &quot;--\\&quot; &quot;Set or return expiration time in milliseconds. \&quot; &quot;:param int ms:Number of milliseconds for expiration time. Zero means no expiration. \&quot; &quot;:return:If you set _ms_ parameter to any positive integer, expiration time is set. Without any parameter, current expiration time is returned.&quot;):&#160;py_template.h']]],
  ['pyinit_5f_5fzroya',['PyInit__zroya',['../py__module_8cpp.html#a6c197214e5f444875cfaafb19fd96e5d',1,'py_module.cpp']]]
];
